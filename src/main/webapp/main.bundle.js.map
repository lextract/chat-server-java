{"version":3,"sources":["webpack:///./src/app/constants.ts","webpack:///./src/app/services/requestOptionsHelper.ts","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/messenger/messenger.component.ts","webpack:///./src/app/models/Message.ts","webpack:///./src/app/models/index.ts","webpack:///./src/app/not-found.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/conversation.service.ts","webpack:///./src/app/services/message.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/models/Conversation.ts","webpack:///./src/app/models/User.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/login/login.component.css","webpack:///./src/app/messenger/messenger.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/messenger/messenger.component.html","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["//export const API_URL = \"http://localhost:4499/api\";\nexport const API_URL = \"/messenger-backend-java\";\nexport const CHAT_URL = \"ws://localhost:4499\";\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/constants.ts","import { Headers, RequestOptions } from '@angular/http';\n\nexport function jsonHeader() {\n  let headers = new Headers({ 'Content-Type': 'application/json' });\n  return new RequestOptions({ headers: headers });\n}\n\nexport function jwtHeader() {\n  let token = localStorage.getItem('jwtToken');\n  let headers = new Headers({ 'Authorization': 'Bearer ' + token });\n  return new RequestOptions({ headers: headers });\n}\n\nexport function jwtAndJson() {\n  let token = localStorage.getItem('jwtToken');\n  let headers = new Headers({\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json'\n  });\n  return new RequestOptions({ headers: headers });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/requestOptionsHelper.ts","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { User } from '../models';\n\nimport { AuthService } from '../services/auth.service';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  userName = \"\";\n  userEmail = \"\";\n  userPass = \"\";\n  showLogin = true;\n  errorMessage = \"\";\n\n  constructor(\n    private router: Router,\n    private authSrv: AuthService\n  ) { }\n  loginSubmit() {\n    if (!this.userEmail || !this.userPass){\n      this.errorMessage = \"Datos invalidos\";\n    }\n\n    this.authSrv.login(this.userEmail, this.userPass).subscribe(user => {\n      let sUser = JSON.stringify(user);\n      localStorage.setItem('userId',user.id);\n      localStorage.setItem('user',sUser);\n      localStorage.setItem('jwtToken',user.token);\n      this.router.navigate(['./messenger']);\n    }, error => {\n      console.log(error);\n    })\n  }\n  signinSubmit() {\n    if (!this.userEmail || !this.userPass || this.userName){\n      this.errorMessage = \"Datos invalidos\";\n    }\n\n    let user: User = new User();\n    user.name = this.userName;\n    user.email = this.userEmail;\n    user.password = this.userPass;\n    this.authSrv.signin(user).subscribe(res => {\n      this.loginSubmit();\n    }, error => {\n      this.errorMessage = \"Datos invalidos\";\n      //console.log(error);\n    })\n  }\n  navToMessenger() {\n    //this.router.navigate(['./messenger']);\n  }\n\n  ngOnInit() { }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\n//import * as WebSo from 'ws';\n\nimport * as io from 'socket.io-client';\n\nimport { CHAT_URL } from '../constants';\nimport { ConversationService } from '../services/conversation.service';\nimport { UserService } from '../services/user.service';\nimport { MessageService } from '../services/message.service';\n\nimport { Message } from '../models/Message';\nimport { User, Conversation } from '../models';\n\n@Component({\n  selector: 'app-messenger',\n  templateUrl: './messenger.component.html',\n  styleUrls: ['./messenger.component.css']\n})\nexport class MessengerComponent implements OnInit, OnDestroy {\n  userName: string;\n  creatingConv = false;\n  currentConversation: Conversation;\n  conversations: Conversation[] = [];\n  messages: Message[] = [];\n  newMessage: string = \"\";\n  friends: User[] = [];\n\n  chatSocket: any;\n\n  constructor(\n    private router: Router,\n    private usersSrv: UserService,\n    private convsSrv: ConversationService,\n    private mesageSrv: MessageService\n  ) {\n    this.userName = JSON.parse(localStorage.getItem(\"user\")).name;\n    // TODO: fix machete!!!!!\n    setTimeout(() => this.ngOnInit(),5);\n  }\n\n  ngOnInit() {\n    this.convsSrv.getAll().subscribe(convs => this.conversations = convs);\n    this.usersSrv.getFriends().subscribe(friends => this.friends = friends);\n    //this.initlizeChatSocket();\n  }\n  ngOnDestroy() {\n\n  }\n  showConv(id: number) {\n    console.log(\"cargando conversation: \" + id);\n    let conv = this.conversations.find(conv => conv.id == id);\n    this.currentConversation = conv;\n    this.mesageSrv.getByConversation(id).subscribe(messages => {\n      this.messages = messages;\n    })\n  }\n  newConv() {\n    this.creatingConv = true;\n  }\n  sendMessage() {\n    // console.log(\"enviando mensaje: \" + this.newMessage);\n    if (!this.newMessage) return;\n    //this.chatSocket.send(this.newMessage);\n    let m = new Message();\n    m.idConversation = this.currentConversation.id;\n    m.text = this.newMessage;\n    // this.messages.push(m);\n    this.mesageSrv.create(m).subscribe(message => {\n      // TODO: ineficient way, fix!, replace for websocket\n      this.showConv(this.currentConversation.id);\n      this.convsSrv.getAll().subscribe(convs => this.conversations = convs);\n    })\n    this.newMessage = \"\";\n  }\n  cancelNewConv() {\n    this.creatingConv = false;\n  }\n  createConv() {\n    let newConv = new Conversation();\n    let participants = this.friends.filter(friend => friend.checked);\n    newConv.name = participants.map(u => u.name).join(\", \");\n    newConv.usersIds = participants.map(r => r.id).join(',');\n\n    this.creatingConv = false;\n    this.convsSrv.create(newConv).subscribe(conv => {\n      //console.log(\"luego dre crear Conv: \" + re);\n      newConv.id = conv.id;\n      this.currentConversation = newConv;\n      this.conversations.push(newConv);\n      this.messages.splice(0);\n      this.convsSrv.getAll().subscribe(convs => this.conversations = convs);\n    })\n  }\n  initlizeChatSocket() {\n    // TODO:\n    //let cli = SocketIO\n    this.chatSocket = io('http://localhost:4499');\n    // //socket.on('message')\n\n\n    // // this.chatSocket = new WebSo(CHAT_URL);\n    // //   // , {\n    // //   //   headers: {\n    // //   //     Authorization: 'Bearer ' + localStorage.getItem('jwt_token')\n    // //   //   }\n    // //   // });\n    this.chatSocket.on(\"message\",(data) => {\n      console.log(\"recibiendo datos WSS\");\n      console.log(data);\n    })\n  }\n  logout() {\n    localStorage.removeItem('jwt_token');\n    this.router.navigate(['./login']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/messenger/messenger.component.ts","import {User} from './User';\n\nexport class Message{\n  id: number;\n  idUser: number;\n  text: string;\n  idConversation: number;\n  userName: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/Message.ts","// TODO: re-export all models\nexport * from './User';\nexport * from './Conversation';\nexport * from './Message';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/index.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'not-found',\n  template: '<h1 class=\"text-center\">Pagina No Econtrada</h1>',\n})\nexport class NotFoundComponent { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/not-found.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport { API_URL } from '../constants';\nimport { User } from '../models';\nimport * as roh from './requestOptionsHelper';\n\nconst endPoint = API_URL + '/auth';\n\n@Injectable()\nexport class AuthService {\n\n  constructor(private http: Http) { }\n\n  login(email: string, password: string) {\n    let url = endPoint + '?email=' + email + '&password=' + password;\n    return this.http.get(url).map(res => {\n      // TODO: change to send status code (see catch() method of http.get() )\n      console.log(res);\n      return res.json();\n    }).catch(this.handleError);\n  }\n  signin(user: User) {\n    return this.http.post(endPoint, JSON.stringify(user), roh.jsonHeader())\n      .map((res: Response) => res.json());\n  }\n\n  logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('jwtToken');\n  }\n\n  private handleError(error: Response | any) {\n    // In a real world app, you might use a remote logging infrastructure\n    // let errMsg: string;\n    // if (error instanceof Response) {\n    //   const body = error.json() || '';\n    //   const err = body.error || JSON.stringify(body);\n    //   errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    // } else {\n    //   errMsg = error.message ? error.message : error.toString();\n    // }\n    // console.error(errMsg);\n    return Observable.throw(\"errMsg\");\n  }\n\n}\n\n// login2(email: string, password: string) {\n//     let postData = JSON.stringify({ email: email, password: password });\n//     return this.http.post(endPoint, postData, roh.jsonHeader()).map((res: Response) => {\n//       // login successful if there's a jwt token in the response\n//       let r = res.json();\n//       console.log(r);\n//       if (r && r.token) {\n//         // store user details and jwt token in local storage to keep user logged in between page refreshes\n//         localStorage.setItem('jwt_token', r.token);\n//       }\n//       else {\n//         //\n//       }\n//       return r;\n//     });\n//   }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, URLSearchParams } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\nimport { API_URL } from '../constants';\nimport { Conversation, User } from '../models';\nimport * as roh from './requestOptionsHelper';\n\nconst endPoint = API_URL + '/conversation';\nconst endPointUsers = API_URL + '/conversation/:id/users';\n\n@Injectable()\nexport class ConversationService {\n  constructor(private http: Http) { }\n\n  getAll() {\n    //return this.http.get(apiUrl, jwtHeader()).map((response: Response) => response.json());\n    let url = endPoint + \"?idUser=\" + localStorage.getItem(\"userId\");\n    return this.http.get(url, roh.jwtHeader())\n      .map(res => res.json())\n      .catch(this.handleError);\n  }\n\n  create(conv: Conversation) {\n    // TODO: set de jwt token header\n    conv.idCreator = parseInt(localStorage.getItem(\"userId\"));\n    return this.http.post(endPoint, conv, roh.jwtAndJson())\n      .map(res => res.json())\n      .catch(this.handleError);\n  }\n\n  /**\n   * Agrega usuarios a una conversación en particular\n   * @param idConv id de la conversación\n   * @param idsUsers lista de los ids de usuarios que va agregar\n   */\n  addUsers(idConv: number, idsUsers: number[]){\n    let url = endPointUsers.replace(\":id\", idConv.toString());\n    return this.http.post(url, { idsUsers: idsUsers }).map(res => res.json());\n  }\n\n  /**\n   * Abandona la conversación (no la elimina)\n   * @param idConv id de la conversación\n   */\n  exit(idConv: number){\n    // TODO: set de jwt token header\n    let url = endPointUsers.replace(\":id\", idConv.toString());\n    return this.http.delete(url).map(res => res.json());\n  }\n\n\n  // update(user: User) {\n  //   return this.http.put(apiUrl + '/' + user.id, user, jwtHeader()).map((response: Response) => response.json());\n  // }\n\n  // delete(id: number) {\n  //   //return this.http.delete(endPoint + '/' + id, jwtHeader()).map(res => res.json());\n  //   return this.http.delete(endPoint + '/' + id).map(res => res.json());\n  // }\n\n  private handleError(error: Response | any) {\n    console.log(error);\n    return Observable.throw(error);\n  }\n}\n\n// let convs: Conversation[] = [\n//       { id: 101, name: \"Conversation 1\", users: [{id:123,name:\"Al Hassem\"}]},\n//       { id: 102, name: \"Conversation 2\", users: [{id:123,name:\"Mohamed\"}]},\n//       { id: 103, name: \"Conversation 3\", users: [{id:123,name:\"Nostradamus\"}]}\n//     ]\n\n//     ;\n\n\n//let params = new URLSearchParams();\n    // //params.set('search', term); // the user's search value\n    // params.set('action', 'opensearch');\n    // params.set('format', 'json');\n    //params.set('callback', 'JSONP_CALLBACK');\n\n\n\n  // getAllOwn(){\n  //   let params = new URLSearchParams();\n  //   params.set('callback', 'JSONP_CALLBACK');\n  //   return this.http.get(apiUrl, { search: params }).map(res => res.json());\n  // }\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/conversation.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { API_URL } from '../constants';\nimport { Message } from '../models';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\nimport * as roh from './requestOptionsHelper';\n\nconst endPoint = API_URL + '/message';\n\n@Injectable()\nexport class MessageService {\n  constructor(private http: Http) { }\n\n  getByConversation(idConv: number){\n    let url = endPoint + \"?idConv=\" + idConv;\n    return this.http.get(url, roh.jwtHeader())\n      .map(res => res.json())\n      .catch(this.handleError);\n  }\n\n  create(message: Message){\n    message.idUser = parseInt(localStorage.getItem(\"userId\"));\n    return this.http.post(endPoint, message, roh.jwtAndJson())\n      .map(res => res.json())\n      .catch(this.handleError);\n  }\n\n  private handleError(error: Response | any) {\n    console.log(error);\n    return Observable.throw(error);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/message.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Jsonp, Response, URLSearchParams  } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\nimport { API_URL } from '../constants';\nimport { User } from '../models';\nimport * as roh from './requestOptionsHelper';\n\nconst endPoint = API_URL + '/user';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private http: Http\n  ) { }\n  getFriends() {\n    //return this.http.post('/api/users', user, this.jwt()).map((response: Response) => response.json());\n    // TODO: con jwt el server conoce el id del usuario actual, devuelve la lista de amigos\n    let url = endPoint + \"?idUser=\" + localStorage.getItem(\"userId\");\n    return this.http.get(url, roh.jwtHeader())\n      .map(res => res.json())\n      .catch(this.handleError);\n\n    // return new Promise<User[]>((resolve)=> {\n    //   //resolve(friends);\n    //   let params = new URLSearchParams();\n    // //params.set('search', term); // the user's search value\n    // params.set('action', 'opensearch');\n    // params.set('format', 'json');\n    // params.set('callback', 'JSONP_CALLBACK');\n\n    //   this.jsonp.get(apiUrl, { search: params }\n    //   ).subscribe(res => {\n    //     console.log(res);\n\n    //     resolve(res.json());\n\n    //   })\n    // });\n\n    //return\n    // .subscribe((response: Response) => {\n    //   console.log(\"LA GRAN PYTA MUERDA\");\n    //   console.log(response);\n    //   let result = response.json();\n    //   console.log(result);\n    //   return result;\n    // });//.catch(this.handleError);\n  }\n  private handleError(error: Response | any) {\n    // In a real world app, you might use a remote logging infrastructure\n    // let errMsg: string;\n    // if (error instanceof Response) {\n    //   const body = error.json() || '';\n    //   const err = body.error || JSON.stringify(body);\n    //   errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    // } else {\n    //   errMsg = error.message ? error.message : error.toString();\n    // }\n    console.error(error);\n    return Observable.throw(error);\n  }\n\n  // getAll() {\n  //   return this.http.get(apiUrl, jwtHeader()).map((response: Response) => response.json());\n  // }\n\n  // getById(id: number) {\n  //   return this.http.get(apiUrl + '/' + id, jwtHeader()).map((response: Response) => response.json());\n  // }\n\n  // create(user: User) {\n  //   return this.http.post(apiUrl, user, jwtHeader()).map((response: Response) => response.json());\n  // }\n\n  // update(user: User) {\n  //   return this.http.put(apiUrl + '/' + user.id, user, jwtHeader()).map((response: Response) => response.json());\n  // }\n\n  // delete(id: number) {\n  //   return this.http.delete(apiUrl + '/' + id, jwtHeader()).map((response: Response) => response.json());\n  // }\n  // getCurrent() {\n  //   return current;\n  // }\n}\n// let current: User = {\n//   id: 21,\n//   name: \"Alex\"\n// }\n\n// let friends: User[] = [\n//   { id: 11, name: \"Goku\" },\n//   { id: 12, name: \"Alf\" },\n//   { id: 12, name: \"Homero\" }\n// ]\n\nfunction handleError(error: Response | any) {\n  // In a real world app, you might use a remote logging infrastructure\n  let errMsg: string;\n  if (error instanceof Response) {\n    const body = error.json() || '';\n    const err = body.error || JSON.stringify(body);\n    errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n  } else {\n    errMsg = error.message ? error.message : error.toString();\n  }\n  console.error(errMsg);\n  return Observable.throw(errMsg);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/user.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 367;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 367\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotFoundComponent } from './not-found.component';\nimport { LoginComponent }   from './login/login.component';\nimport { MessengerComponent }      from './messenger/messenger.component';\n//import { HeroDetailComponent }  from './hero-detail.component';\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login',  component: LoginComponent },\n  //{ path: 'detail/:id', component: HeroDetailComponent },\n  { path: 'messenger',     component: MessengerComponent },\n  { path: '**', component: NotFoundComponent }\n];\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule, JsonpModule } from '@angular/http';\n\nimport { AuthService } from './services/auth.service';\nimport { ConversationService } from './services/conversation.service';\nimport { MessageService } from './services/message.service';\nimport { UserService } from './services/user.service';\n\nimport { AppComponent } from './app.component';\nimport { NotFoundComponent } from './not-found.component';\nimport { LoginComponent } from './login/login.component';\nimport { MessengerComponent } from './messenger/messenger.component';\n\n\nimport { AppRoutingModule }     from './app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotFoundComponent,\n    LoginComponent,\n    MessengerComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    JsonpModule,\n    AppRoutingModule\n  ],\n  providers: [ AuthService, ConversationService, UserService, MessageService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","export class Conversation{\n  id: number;\n  name: string;\n  idCreator: number;\n  lastMessageText: string;\n  usersIds: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/Conversation.ts","export class User{\n  id: number;\n  name: string;\n  email: string;\n  password: string;\n  checked?: boolean;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/User.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 559\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".logoPanel, .formsPanel{\\n  float:left;\\n  width: 50%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = 560\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/*\\n    Created on : Mar 5, 2017, 9:11:12 AM\\n    Author     : alex\\n*/\\n.areaMain{\\n    height: 100%;\\n    padding-top: 70px;\\n}\\n.areaMain .areaConversations{\\n    width: 32%;\\n    height: 100%;\\n    float: left;\\n    padding: 0 29px 23px;\\n    overflow-y: auto;\\n    position: relative;\\n}\\n.newPanel{\\n  position: absolute;\\n  bottom: 14px;\\n  right: 29px;\\n}\\n.areaMain .areaChat{\\n    width: 65%;\\n    display: inline-block;\\n    position: relative;\\n    height: 95%;\\n}\\n.areaMessage{\\n    position: absolute;\\n    bottom: 0;\\n    width: 100%;\\n}\\n.messagesArea{\\n  height: 80%;\\n  overflow-y: auto;\\n  padding-bottom: 40px;\\n}\\n.areaNewConv{\\n    height: 100%;\\n    float: left;\\n    padding: 0 29px 23px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/messenger/messenger.component.css\n// module id = 561\n// module chunks = 1","module.exports = \"<router-outlet></router-outlet>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 567\n// module chunks = 1","module.exports = \"<div class=\\\"h100\\\">\\n  <div class=\\\"logoPanel\\\">\\n    <div class=\\\"logoP1\\\">LOGO</div>\\n    <!--<button>Nota importante</button>\\n    <p>Aclaración nota importante</p>-->\\n  </div>\\n  <div class=\\\"formsPanel\\\">\\n    <div *ngIf=\\\"showLogin\\\">\\n      <form (submit)=\\\"loginSubmit()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"emailTxt\\\">Correo</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"emailTxt\\\" placeholder=\\\"yisus@gmail.com\\\"\\n            [(ngModel)]=\\\"userEmail\\\" name=\\\"email\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"passwordTxt\\\">Contraseña</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordTxt\\\" placeholder=\\\"****\\\"\\n            [(ngModel)]=\\\"userPass\\\" name=\\\"password\\\" required>\\n        </div>\\n        <div class=\\\"checkbox\\\">\\n          <label>\\n            <input type=\\\"checkbox\\\"> Recordarme\\n          </label>\\n        </div>\\n        <div>\\n          <button class=\\\"btn btn-primary\\\">Ingresar</button>\\n          <a class=\\\"btn btn-default\\\" (click)=\\\"showLogin = false\\\">Registrarse</a>\\n        </div>\\n      </form>\\n    </div>\\n    <div *ngIf=\\\"!showLogin\\\">\\n      <form (submit)=\\\"signinSubmit()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"nombreTxt\\\">Nombre</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nombreTxt\\\" placeholder=\\\"Yisus Christ\\\"\\n            [(ngModel)]=\\\"userName\\\" name=\\\"name\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"emailTxt\\\">Correo</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"emailTxt\\\" placeholder=\\\"yisus@gmail.com\\\"\\n            [(ngModel)]=\\\"userEmail\\\" name=\\\"email\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"passwordTxt\\\">Contraseña</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwordTxt\\\" placeholder=\\\"****\\\"\\n            [(ngModel)]=\\\"userPass\\\" name=\\\"password\\\" required>\\n        </div>\\n        <div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Registrar</button>\\n          <a class=\\\"btn btn-default\\\" role=\\\"button\\\" (click)=\\\"showLogin = true\\\">Ingresar</a>\\n        </div>\\n      </form>\\n      <span style=\\\"color:red;\\\">{{errorMessage}}}</span>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = 568\n// module chunks = 1","module.exports = \"<div class=\\\"h100\\\">\\n  <div class=\\\"areaMain\\\">\\n    <div class=\\\"areaConversations\\\">\\n      <div *ngIf=\\\"!creatingConv\\\" class=\\\"list-group\\\">\\n        <a *ngFor=\\\"let conv of conversations\\\"\\n          (click)=\\\"showConv(conv.id)\\\"\\n          class=\\\"list-group-item\\\">\\n          <strong>{{ conv.name }}</strong>  {{ conv.lastMessageText }}\\n        </a>\\n      </div>\\n      <div *ngIf=\\\"!creatingConv\\\" class=\\\"newPanel\\\">\\n        <button (click)=\\\"newConv()\\\" class=\\\"btn btn-success\\\">Nueva</button>\\n      </div>\\n      <div *ngIf=\\\"creatingConv\\\" class=\\\"areaNewConv\\\">\\n        <div *ngFor=\\\"let friend of friends\\\">\\n          <label>\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"friend.checked\\\">\\n            <span>{{ friend.name }}</span>\\n          </label>\\n        </div>\\n        <div class=\\\"newPanel\\\">\\n          <button (click)=\\\"cancelNewConv()\\\" class=\\\"btn btn-danger\\\">Cancelar</button>\\n          <button (click)=\\\"createConv()\\\" class=\\\"btn btn-success\\\">Crear</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"areaChat\\\">\\n      <div *ngIf=\\\"currentConversation\\\" class=\\\"panel panel-default h100\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <span >{{currentConversation.name}},</span>\\n        </div>\\n        <div class=\\\"panel-body messagesArea\\\">\\n          <div *ngFor=\\\"let message of messages\\\">\\n            <strong>{{ message.userName }}:  </strong>{{ message.text }}\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"!currentConversation\\\">\\n        <h2>Conversacion no seleccionada</h2>\\n      </div>\\n      <div class=\\\"areaMessage\\\">\\n        <form class=\\\"form-inline\\\" (submit)=\\\"sendMessage()\\\">\\n          <div class=\\\"input-group\\\">\\n            <input [value]=\\\"newMessage\\\" (input)=\\\"newMessage=$event.target.value\\\"\\n              type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Mensaje\\\" >\\n            <div class=\\\"input-group-btn\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Enviar</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n  <nav class=\\\"navbar navbar-default navbar-fixed-top\\\">\\n    <div class=\\\"container\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">UN Messenger</a>\\n      <strong>{{userName}}</strong>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"logout()\\\">Cerrar sesión</button>\\n      </ul>\\n    </div>\\n  </nav>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/messenger/messenger.component.html\n// module id = 569\n// module chunks = 1","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 596\n// module chunks = 1"],"sourceRoot":""}